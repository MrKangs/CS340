/*
Authors:        Mark Jordan, Kenneth Kang
Course:         CS340 - Intro to Databases
Instructors:    Dr. Michael. Curry, Danielle Safonte
Project:        Step 4 DRAFT
Due:            2022-07-28
Description:    Data manipulation queries for DOGE-X.
*/



/* Since we are planning to use Flask (Python language) and do not know how the interaction will work between sql query and value sending, we are going to use just values for now.
  However, we will put a comment right next to the query saying that value A
  will be the input value to do the action. */

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
/* Retrieve userAccounts table */
SELECT * FROM userAccounts;

/* Retrieve fiatWallets table */
SELECT * FROM fiatWallets;

/* Retrieve dogecoinWallets table */
SELECT * FROM dogecoinWallets;

/* Retrieve exchangeOrders table */
SELECT * FROM exchangeOrders;

/* Retrieve dogecoinTransactions table */
SELECT * FROM dogecoinTransactions;

/* Search/Filter userAccounts table based on First Name and Last Name */
SELECT * FROM userAccounts WHERE firstName = 'John' AND lastName = 'Doe';
-- When the user enters John Doe, it will automatically search for the user with the first name John and the last name Doe.

/* Search/Filter fiatWallets table based on First Name and Last Name */
SELECT * FROM fiatWallets INNER JOIN userAccounts ON fiatWallets.fiatWalletID = userAccounts.fiatWalletID WHERE userAccounts.firstName = 'John' AND userAccounts.lastName = 'Doe';
-- When the user enters John Doe, it will automatically search for the user's fiatwallet information.

/* Search/Filter dogecoinWallets table based on First Name and Last Name */
SELECT * FROM dogecoinWallets INNER JOIN userAccounts ON dogecoinWallets.dogecoinWalletID = userAccounts.dogecoinWalletID WHERE userAccounts.firstName = 'John' AND userAccounts.lastName = 'Doe';
-- When the user enters John Doe, it will automatically search for the user's dogecoinWallet information.

/* Search/Filter all transactions from dogecoinTransactions table based on userAccount firstName and lastName */
SELECT * FROM dogecoinTransactions
INNER JOIN dogecoinWallets ON dogecoinWallets.dogecoinWalletID = dogecoinTransactions.dogecoinWalletID
INNER JOIN userAccounts ON userAccounts.dogecoinWalletID = dogecoinWallets.dogecoinWalletID
WHERE userAccounts.firstName = 'John' AND userAccounts.lastName = 'Doe';
-- When the user enters John Doe in the search, it will automatically search for the dogecoinTransactions based on the name.

/* Search/Filter all orders from exchangeOrders table based on userAccount firstName and lastName */
SELECT * FROM exchangeOrders
INNER JOIN dogecoinWallets ON dogecoinWallets.dogecoinWalletID = exchangeOrders.dogecoinWalletID
INNER JOIN userAccounts ON userAccounts.dogecoinWalletID = dogecoinWallets.dogecoinWalletID
WHERE userAccounts.firstName = 'John' AND userAccounts.lastName = 'Doe';
-- When the user enters John Doe in the search, it will automatically search for
-- the dogecoinTransactions based on the name.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

/* Insert into userAccounts table */
-- When an userAccount Record is created, fiatWallet and dogecoinWallet records will created a new record as well.

INSERT INTO fiatWallets (fiatWalletID, fiatWalletName, fiatBalance)
VALUES ("F12222393", "My New Wallet", 0);
-- The fiatWalletID will be auto generated with the similiar syntax style, but the fiatBalance will be 0 always since it is new.

INSERT INTO dogecoinWallets (dogecoinWalletID, walletAddress,dogecoinBalance)
VALUES ("D12222393", "DP9jzRmr54eszobQgFsvu2Qgi55DaJBmmy",0);
-- The dogecoinWalletID will be auto generated with the similiar syntax style, but the dogecoinBalance will be 0 always since it is new.

INSERT INTO userAccounts (userID, firstName, lastName, address, city, state, zipCode, phoneNumber, email, password, fiatWalletID, dogecoinWalletID)
VALUES ("U6", "John", "Doe", "1238 SW 12th Ave", "Nashville", "TN", "37501", "7591893738", "jd757@gmail.com", "johndoeisautogenerated11" "D12222393", "F12222393");

/* Insert into userAccounts table */
INSERT INTO dogecoinTransactions (txID, txTimestamp, amount, txDirection, dogecoinWalletID, externalWalletAddress, txHash)
VALUES ("T10", "2020-07-21 12:03:33", 85.93812938, "Withdrawal", "D12222393", "DP9jzRmr54eszobQgFsvu2Qgi55DFJBmmy', 'ca29be2a6d1d5b57afef7drefec09a2e731faaee38e5e6a0ee2bd17aa389491f");
-- The txID will be auto generated with the similiar syntax style.
-- The txTimestamp will be inserted when the user submits into the database.
-- The amount will be the amount of dogecoin that the user wants to withdraw or deposite: must be numerical/decimal.
-- The txDirection will be either "Withdrawal" or "Deposit". (Dropdown menu)
-- The dogecoinWalletID will be a dropdown menu that will be populated with the dogecoinWallets table. (or value input and return if it is invalid or not)
-- The externalWalletAddress and txHash will be auto generated that is unique.


/* Insert into exchangeOrders table */
INSERT INTO exchangeOrders (exchangeID, fiatWalletID, dogecoinWalletID, orderTimestamp, orderType, orderDirection, amountFilled, orderPrice)
VALUES ("E11", "F12222393", "D12222393", "2020-07-21 12:03:33", "Limit", "Buy", 100, 2.24);
-- The exchangeID will be auto generated with the similiar syntax style.
-- The fiatWalletID will be a dropdown menu that will be populated with the fiatWallets table. (or value input and return if it is invalid or not)
-- The dogecoinWalletID will be a dropdown menu that will be populated with the dogecoinWallets table. (or value input and return if it is invalid or not)
-- The orderTimestamp will be inserted when the user submits into the database.
-- The orderType will be either "Limit", "Market", "Stop Limit", or "Stop Market". (Dropdown menu)
-- The orderDirection will be either "Buy" or "Sell". (Dropdown menu)
-- The amountFilled will be the amount of dogecoin that the user wants to withdraw or deposite: must be numerical/decimal.
-- The orderPrice will be the price of dogecoin that the user wants to withdraw or deposite: must be numerical/decimal.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

/* Update a certain userAccounts value */
UPDATE userAccounts SET email = 'kangken@oregonstate.edu', zipCode = "97003", city = "Beaverton"  WHERE userID = 'U1';
-- userID is the primary key will always be used for where clause whereas the set clause values will be from user input values from the form (email, zipCode, city).
-- The user is unable to change the userID, fiatWalletID, and dogecoinWalletID value.

/* Update a certain fiatWallets value */
UPDATE fiatWallets SET fiatBalance = 431 WHERE fiatWalletID = 'F12348904';
-- fiatWalletID is the primary key will always be used for where clause whereas the set clause values will be from user input values from the form (fiatBalance).
-- The user is unable to change the fiatWalletID value.

/* Update a certain userAccounts value */
UPDATE dogecoinWallets SET dogecoinBalance = 2345 WHERE dogecoinWalletID = 'D98247833';
-- fiatWalletID is the primary key will always be used for where clause whereas the set clause values will be from user input values from the form (dogecoinBalance).
-- The user is unable to change the dogecoinWalletID value and walletAddress.

/* Update a certain userAccounts value */
UPDATE exchangeOrders SET amountFilled = 49683.372543 WHERE exchangeID = 'E6';
-- exchangeID is the primary key will always be used for where clause whereas the set clause values will be from user input values from the form (amountFilled).
-- The user is unable to change the exchangeID, fiatWalletID, dogecoinWalletID, and orderTimestamp value.
-- The orderTimestamp value will be automatically updated when the record is updated.

/* Update a certain userAccounts value */
UPDATE dogecoinTransactions SET amount = 8683986.38387583 WHERE txID = 'T11';
-- txID is the primary key will always be used for where clause whereas the set clause values will be from user input values from the form (amount).
-- The user is unable to change the txID, txTimestamp, dogecoinWalletID, externalWalletAddress, and txHash value.
-- The txTimestamp value will be automatically updated when the record is updated.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SET @fiatWalletID := (SELECT fiatWallets.fiatWalletID FROM fiatWallets INNER JOIN userAccounts ON fiatWallets.fiatWalletID = userAccounts.fiatWalletID WHERE userAccounts.userID = 'U2');
SET @dogecoinWalletID := (SELECT dogecoinWallets.dogecoinWalletID FROM dogecoinWallets INNER JOIN userAccounts ON dogecoinWallets.dogecoinWalletID = userAccounts.dogecoinWalletID WHERE userAccounts.userID = 'U2');
DELETE FROM dogecoinWallets WHERE dogecoinWalletID = @dogecoinWalletID;
DELETE FROM fiatWallets WHERE fiatWalletID = @fiatWalletID;
DELETE FROM userAccounts WHERE userID = 'U2';
-- -- userID is the primary key will always be used for where clause.
-- -- When you are delete a record from userAccounts, the associated fiatWallets and dogecoinWallets will be removed as well.

SET @dogecoinWalletID := (SELECT dogecoinWallets.dogecoinWalletID FROM dogecoinWallets INNER JOIN userAccounts ON userAccounts.dogecoinWalletID = dogecoinWallets.dogecoinWalletID INNER JOIN fiatWallets ON fiatWallets.fiatWalletID = userAccounts.fiatWalletID WHERE fiatWallets.fiatWalletID = 'F34072432');
DELETE FROM dogecoinWallets WHERE dogecoinWalletID = @dogecoinWalletID;
DELETE FROM fiatWallets WHERE fiatWalletID = 'F34072432';
-- fiatWalletID is the primary key will always be used for where clause.
-- When fiatWalletID is deleted, then the dogecoinWallet gets delete as well.

SET @fiatWalletID := (SELECT fiatWallets.fiatWalletID FROM fiatWallets INNER JOIN userAccounts ON userAccounts.fiatWalletID = fiatWallets.fiatWalletID INNER JOIN dogecoinWallets ON dogecoinWallets.dogecoinWalletID = userAccounts.dogecoinWalletID WHERE dogecoinWallets.dogecoinWalletID = 'D88832435');
DELETE FROM fiatWallets WHERE fiatWalletID = @fiatWalletID;
DELETE FROM dogecoinWallets WHERE dogecoinWalletID = 'D88832435';
-- dogecoinWalletID is the primary key will always be used for where clause.
-- When dogecoinWalletID is deleted, then the fiatWallet gets delete as well.

DELETE FROM exchangeOrders WHERE exchangeID = 'E3';
-- exchangeID is the primary key will always be used for where clause.

DELETE FROM dogecoinTransactions WHERE txID = 'T11';
-- txID is the primary key will always be used for where clause.
